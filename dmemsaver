#!/bin/bash

# Parse command-line arguments
if [[ "$1" == "--export" ]]; then
  ACTION="export"
elif [[ "$1" == "--import" ]]; then
  ACTION="import"
elif [[ "$1" == "--uninstall" ]]; then
  ACTION="uninstall"
elif [[ "$1" == "--automatic" ]]; then
  ACTION="automatic"
elif [[ "$1" == "--update" ]]; then
  ACTION="update"
else
  echo "Usage: $0 --export | --import | --uninstall | --automatic | --update"
  exit 1
fi

# Load environment variables (like GIT_USERNAME, GIT_EMAIL, GITHUB_TOKEN)
if [ -f ~/.dmemsaver/.env ]; then
  set -a
  source ~/.dmemsaver/.env
  set +a
fi

# Check if GIT_REPO_DIR is set and change to that directory
if [[ -n "$GIT_REPO_DIR" && -d "$GIT_REPO_DIR" ]]; then
  cd "$GIT_REPO_DIR" || exit
else
  echo "[!] GitHub repository directory not set or doesn't exist."
  echo "[!] Please setup a GitHub repository and setup .env file in ~/.dmemsaver/."
  exit 1
fi

# Configure git identity
if [[ -n "$GIT_USERNAME" && -n "$GIT_EMAIL" ]]; then
  git config user.name "$GIT_USERNAME"
  git config user.email "$GIT_EMAIL"
fi

# Update remote URL to use token authentication
if [[ -n "$GITHUB_TOKEN" && -n "$GIT_USERNAME" && -n "$GIT_REPO_URL" ]]; then
  AUTH_URL=$(echo "$GIT_REPO_URL" | sed "s#https://#https://$GIT_USERNAME:$GITHUB_TOKEN@#")
  git remote set-url origin "$AUTH_URL"
fi

# Function to export saves
export_saves() {
  echo "[+] Running export script..."
  python3 ~/.dmemsaver/export.py "$GIT_REPO_DIR"
  echo "[+] Fetching the latest changes from remote repository..."
  git pull

  git add .
  if [[ -n $(git diff) || -n $(git diff --cached) ]]; then
    echo "[+] Changes detected. Committing..."
    git commit -m "Auto-update: Save data on $(date '+%Y-%m-%d %H:%M:%S') from $(hostname)"
    git push
  else
    echo "[âœ“] No changes to commit."
  fi
}

# Function to import saves
import_saves() {
  echo "[+] Fetching the latest changes from remote repository..."
  git pull
  echo "[+] Running import script..."
  python3 ~/.dmemsaver/import.py "$GIT_REPO_DIR"
}

# Execute based on the action specified
case "$ACTION" in
  export)
    export_saves
    ;;
  import)
    import_saves
    ;;
  uninstall)
    sh ~/.dmemsaver/scripts/uninstall.sh
    ;;
  automatic)
    sh ~/.dmemsaver/scripts/cron.sh
    ;;
  update)
    sh ~/.dmemsaver/scripts/update.sh
    ;;
  *)
    echo "[!] Invalid action. Use --export | --import | --uninstall | --automatic | --update"
    exit 1
    ;;
esac
